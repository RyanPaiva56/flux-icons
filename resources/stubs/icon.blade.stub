{{-- 
  Icon:     {INFO_ICON_NAME} 
  Usage:    {INFO_ICON_USAGE} 
  Credits:  {INFO_CREDITS} 
  Flux:     {INFO_FLUX_VERSION} 
  Built:    {INFO_BUILD_DATE}
--}}


@props([
    'variant' => 'outline',
])

@php
$classes = Flux::classes('shrink-0')
    ->add(match($variant) {
        'outline' => '[:where(&)]:size-6',
        'solid' => '[:where(&)]:size-6',
        'mini' => '[:where(&)]:size-5',
        'micro' => '[:where(&)]:size-4',
    });
@endphp

<?php switch ($variant): case ('outline'): ?>
<svg {{ $attributes->class($classes) }} data-flux-icon xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 {SVG_OUTLINE_24_SIZE} {SVG_OUTLINE_24_SIZE}" stroke-width="{SVG_OUTLINE_STROKE}" stroke="currentColor" aria-hidden="true" data-slot="icon">
  <path stroke-linecap="round" stroke-linejoin="round" d="{SVG_PATH_OUTLINE_24}"/>
</svg>

        <?php break; ?>

    <?php case ('solid'): ?>
<svg {{ $attributes->class($classes) }} data-flux-icon xmlns="http://www.w3.org/2000/svg" viewBox="0 0 {SVG_SOLID_24_SIZE} {SVG_SOLID_24_SIZE}" fill="currentColor" aria-hidden="true" data-slot="icon">
  <path fill-rule="evenodd" d="{SVG_PATH_SOLID_24}" clip-rule="evenodd"/>
</svg>

        <?php break; ?>

    <?php case ('mini'): ?>
<svg {{ $attributes->class($classes) }} data-flux-icon xmlns="http://www.w3.org/2000/svg" viewBox="0 0 {SVG_SOLID_20_SIZE} {SVG_SOLID_20_SIZE}" fill="currentColor" aria-hidden="true" data-slot="icon">
  <path fill-rule="evenodd" d="{SVG_PATH_SOLID_20}" clip-rule="evenodd"/>
</svg>

        <?php break; ?>

    <?php case ('micro'): ?>
<svg {{ $attributes->class($classes) }} data-flux-icon xmlns="http://www.w3.org/2000/svg" viewBox="0 0 {SVG_SOLID_16_SIZE} {SVG_SOLID_16_SIZE}" fill="currentColor" aria-hidden="true" data-slot="icon">
  <path fill-rule="evenodd" d="{SVG_PATH_SOLID_16}" clip-rule="evenodd"/>
</svg>

        <?php break; ?>

<?php endswitch; ?>